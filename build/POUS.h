#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
__DECLARE_ARRAY_TYPE(__ARRAY_OF_BYTE_10,BYTE,[10])
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// FUNCTION_BLOCK BOT_SIZE_RAND_GENERATOR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,IN)
  __DECLARE_VAR(UDINT,OUT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(UINT,BSZGENR)
  __DECLARE_VAR(BOOL,M)
  __DECLARE_VAR(BOOL,INIT)

} BOT_SIZE_RAND_GENERATOR;

void BOT_SIZE_RAND_GENERATOR_init__(BOT_SIZE_RAND_GENERATOR *data__, BOOL retain);
// Code part
void BOT_SIZE_RAND_GENERATOR_body__(BOT_SIZE_RAND_GENERATOR *data__);
// FUNCTION_BLOCK BOT_STATE_RAND_GENERATOR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,IN)
  __DECLARE_VAR(UDINT,OUT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(UINT,BSGENR)
  __DECLARE_VAR(BOOL,M)
  __DECLARE_VAR(BOOL,INIT)

} BOT_STATE_RAND_GENERATOR;

void BOT_STATE_RAND_GENERATOR_init__(BOT_STATE_RAND_GENERATOR *data__, BOOL retain);
// Code part
void BOT_STATE_RAND_GENERATOR_body__(BOT_STATE_RAND_GENERATOR *data__);
// FUNCTION_BLOCK BOT_DETECT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,IN)
  __DECLARE_VAR(UDINT,OUT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(UINT,BDGENR)
  __DECLARE_VAR(BOOL,M)
  __DECLARE_VAR(BOOL,INIT)

} BOT_DETECT;

void BOT_DETECT_init__(BOT_DETECT *data__, BOOL retain);
// Code part
void BOT_DETECT_body__(BOT_DETECT *data__);
// PROGRAM BOTTLEREFILL
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,START)
  __DECLARE_VAR(BOOL,STOP)
  __DECLARE_VAR(BOOL,SYSTEM_ON)
  TON TON0;
  __DECLARE_VAR(TIME,TIME_ON1)
  __DECLARE_VAR(TIME,TIME_ON2)
  __DECLARE_VAR(BOOL,BOT_DETECT_STATE)
  BOT_SIZE_RAND_GENERATOR BOT_SIZE_RAND_GENERATOR0;
  BOT_STATE_RAND_GENERATOR BOT_STATE_RAND_GENERATOR0;
  __DECLARE_VAR(BOOL,BOT_SIZE1)
  __DECLARE_VAR(BOOL,BOT_SIZE2)
  __DECLARE_VAR(BOOL,BOT_SIZE3)
  __DECLARE_VAR(BOOL,BOT_SIZE4)
  __DECLARE_VAR(BOOL,BOT_SIZE5)
  __DECLARE_VAR(BYTE,FIRST_BOT_STATE_BIT)
  __DECLARE_VAR(BYTE,SECOND_BOT_STATE_BIT)
  __DECLARE_VAR(BYTE,THIRD_BOT_STATE_BIT)
  __DECLARE_VAR(BYTE,FOURTH_BOT_STATE_BIT)
  __DECLARE_VAR(BYTE,FIFTH_BOT_STATE_BIT)
  __DECLARE_VAR(BYTE,FIRST_BOT_SIZE_BIT)
  __DECLARE_VAR(BYTE,SECOND_BOT_SIZE_BIT)
  __DECLARE_VAR(BYTE,THIRD_BOT_SIZE_BIT)
  __DECLARE_VAR(BYTE,FOURTH_BOT_SIZE_BIT)
  __DECLARE_VAR(BYTE,FIFTH_BOT_SIZE_BIT)
  __DECLARE_VAR(BOOL,BIT_TIMER_STATE1)
  __DECLARE_VAR(BOOL,BIT_TIMER_STATE2)
  __DECLARE_VAR(BOOL,BIT_TIMER_STATE3)
  __DECLARE_VAR(BOOL,BIT_TIMER_STATE4)
  __DECLARE_VAR(BOOL,BOT_STATE1)
  __DECLARE_VAR(BOOL,BOT_STATE2)
  __DECLARE_VAR(BOOL,BOT_STATE3)
  __DECLARE_VAR(BOOL,BOT_STATE4)
  __DECLARE_VAR(BOOL,BOT_STATE5)
  SR SR0;
  SR SR1;
  BOT_DETECT BOT_DETECT0;
  SR SR2;
  SR SR3;
  SR SR4;
  SR SR5;
  SR SR6;
  SR SR7;
  __DECLARE_VAR(BOOL,FILL_LARGE)
  __DECLARE_VAR(BOOL,FILL_SMALL)
  __DECLARE_VAR(BOOL,PASS)
  __DECLARE_VAR(BOOL,DISCARD)
  __DECLARE_VAR(BOOL,UP)
  __DECLARE_VAR(BOOL,DOWN)
  __DECLARE_VAR(BOOL,FEED_MOTOR)
  TON TON1;
  TON TON2;
  __DECLARE_VAR(BOOL,LT153_OUT)
  __DECLARE_VAR(BOOL,GT4_OUT)
  __DECLARE_VAR(BOOL,LT161_ENO)
  __DECLARE_VAR(BOOL,LT161_OUT)
  __DECLARE_VAR(BOOL,GT61_OUT)
  __DECLARE_VAR(BOOL,LT64_ENO)
  __DECLARE_VAR(BOOL,LT64_OUT)
  __DECLARE_VAR(BOOL,UDINT_TO_BOOL22_OUT)
  __DECLARE_VAR(BOOL,LT17_OUT)
  __DECLARE_VAR(BOOL,UDINT_TO_BOOL8_OUT)
  __DECLARE_VAR(BOOL,UDINT_TO_BOOL41_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE109_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE9_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL29_OUT)
  __DECLARE_VAR(BOOL,GT37_OUT)
  __DECLARE_VAR(BOOL,LT105_ENO)
  __DECLARE_VAR(BOOL,LT105_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE12_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL80_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE77_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL31_OUT)
  __DECLARE_VAR(BOOL,GT21_OUT)
  __DECLARE_VAR(BOOL,LT108_ENO)
  __DECLARE_VAR(BOOL,LT108_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE27_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL82_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE79_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL54_OUT)
  __DECLARE_VAR(BOOL,GT43_OUT)
  __DECLARE_VAR(BOOL,LT112_ENO)
  __DECLARE_VAR(BOOL,LT112_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE49_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL93_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE91_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL69_OUT)
  __DECLARE_VAR(BOOL,GT65_OUT)
  __DECLARE_VAR(BOOL,LT114_ENO)
  __DECLARE_VAR(BOOL,LT114_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE67_OUT)
  __DECLARE_VAR(BOOL,BYTE_TO_BOOL100_OUT)
  __DECLARE_VAR(BYTE,BOOL_TO_BYTE98_OUT)
  __DECLARE_VAR(BOOL,GT145_ENO)
  __DECLARE_VAR(BOOL,GT145_OUT)

} BOTTLEREFILL;

void BOTTLEREFILL_init__(BOTTLEREFILL *data__, BOOL retain);
// Code part
void BOTTLEREFILL_body__(BOTTLEREFILL *data__);
#endif //__POUS_H
